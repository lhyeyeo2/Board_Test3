(-)오라클 CLEATE도 못하니깐 재미없다.
create table TBLMEMBER (
ID VARCHAR2(20) PRIMARY KEY,
PWD VARCHAR2(20) NOT NULL,
NAME VARCHAR2(20) NOT NULL,
GENDER VARCHAR2(1) NOT NULL,
BIRTHDAY VARCHAR2(6) NOT NULL,
EMAIL VARCHAR2(30) NOT NULL,
ZIPCODE VARCHAR2(5) NOT NULL,
ADDRESS VARCHAR2(50) NOT NULL,
HOBBY VARCHAR2(5) NOT NULL,
JOB VARCHAR2(20) NOT NULL );

DESC TBLMEMBER;

CREATE TABLE TBLZIPCODE (
ZIPCODE VARCHAR2(5) NOT NULL,
AREA1 VARCHAR2(10),
AREA2 VARCHAR2(20),
AREA3 VARCHAR2(30));

DESC TBLZIPCODE;

이름       널?       유형           
-------- -------- ------------ 
ID       NOT NULL VARCHAR2(20) 
PWD      NOT NULL VARCHAR2(20) 
NAME     NOT NULL VARCHAR2(20) 
GENDER   NOT NULL VARCHAR2(1)  
BIRTHDAY NOT NULL VARCHAR2(6)  
EMAIL    NOT NULL VARCHAR2(30) 
ZIPCODE  NOT NULL VARCHAR2(5)  
ADDRESS  NOT NULL VARCHAR2(50) 
HOBBY    NOT NULL VARCHAR2(5)  
JOB      NOT NULL VARCHAR2(20) 





이름      널?       유형           
------- -------- ------------ 
ZIPCODE NOT NULL VARCHAR2(5)  
AREA1            VARCHAR2(10) 
AREA2            VARCHAR2(20) 
AREA3            VARCHAR2(30) 




http://jspstudy.co.kr/myapp/ch14/login.jsp
소스보기
copy 
http://jspstudy.co.kr/myapp/ch14/member.jsp
소스보기
copy 
http://jspstudy.co.kr/myapp/ch14/style.css
소스보기
copy 
BODY {
	FONT-SIZE: 9pt; COLOR: black; LINE-HEIGHT: 160%; FONT-FAMILY: 굴림,verdana,tahoma
}
TD {
	FONT-SIZE: 9pt; COLOR: black; LINE-HEIGHT: 160%; FONT-FAMILY: 굴림,verdana,tahoma
}
SELECT {
	FONT-SIZE: 9pt; COLOR: black; LINE-HEIGHT: 160%; FONT-FAMILY: 굴림,verdana,tahoma
}
DIV {
	FONT-SIZE: 9pt; COLOR: black; LINE-HEIGHT: 160%; FONT-FAMILY: 굴림,verdana,tahoma
}
FORM {
	FONT-SIZE: 9pt; COLOR: black; LINE-HEIGHT: 160%; FONT-FAMILY: 굴림,verdana,tahoma
}
TEXTAREA {
	BORDER-RIGHT: 1px solid #999999; BORDER-TOP: 1px solid #999999; FONT-SIZE: 9pt; BORDER-LEFT: 1px solid #999999 ; COLOR: BLACK; BORDER-BOTTOM: 1px solid #999999; FONT-FAMILY: 굴림,verdana; BACKGROUND-COLOR: white
}
INPUT {
	BORDER-RIGHT: 1px solid #999999; BORDER-TOP: 1px solid #999999; FONT-SIZE: 9pt; BORDER-LEFT: 1px solid #999999; COLOR: BLACK; BORDER-BOTTOM: 1px solid #999999; FONT-FAMILY: 굴림,verdana; HEIGHT: 19px; BACKGROUND-COLOR: white
}

A:link {text-decoration:none;color:#696969}
A:hover{text-decoration:yes;color:#66CCFF}
A:visited {text-decoration:none;color:#330066}


//선임의 화면 패턴에 맞춰서 일을 하시는게 일을 잘하는거고 코딩도 잘 하는 거에요
eg> 이 타입으로 하는구나 라고.
<input type="button" value="로그인" onclick="loginCheck()">&nbsp;
<input type="button" value="회원가입" onClick="javascript:location.href='member.jsp'">



http://jspstudy.co.kr/myapp/ch14/script.js
script.js 
->


//zipcodedp은 readonly써서 편집이 안되게 했음.




member.jsp
//url은 ~ 이고 , scrollbars=yes 는 약속이라 외우고.
		url = "zipSearch.jsp?search=n";
		window.open(url, "ZipCodeSearch","width=500,height=300,scrollbars=yes");
calspan 말고 생각하다가 collapse; 생각나셔서
collapse: 2줄이 1줄로 바뀌고 px사이즈 주면 크기 바귐. 선색깔도 줬다.








DBConnectionMgr.java에서
package jsboard;
import java.sql.*;
import java.util.*;

public class MemberMgr {
	private DBConnectionMgr pool;
	
	public MemberMgr() {
		try {
			pool = DBConnectionMgr.getInstance();
		} catch (Exception e) {
			e.prinStackTrace();
		}
	}
	
}








package jsboard;

import java.sql.*;
import java.util.*;

public class DBConnectionMgr {
	private static DBConnectionMgr instance=null;
	
	public DBConnectionMgr() {
	}
	public static DBConnectionMgr getInstance() {
		if(instance == null) {
			synchronized (DBConnectionMgr.class) {
				if(instance == null ) {
					instance=new DBConnectionMgr();
				}
			}
		}
	return instance;
	}
	
	
}









(+)MemberMgr.java에서

			sql="inset tblmember (id,pwd"
			
---			
public boolean insertMember(MemberBean bean) {
		boolean flag=false;
		
		
//2개 비교하기
inserlt 는 한행이 채워졌습니다.
Resultset는 ???

//설명 놓침


//client 쓰고,읽고,삭제하고 수백명이 하는데 pool이 여러개 일 수있다. 가능한 갯수 까지. ?의 인스턴스가지고
getconn한다고.

(-)위의 이유로 수정중
	public boolean insertMember(MemberBean bean) {
		boolean flag=false;
		Connection conn=null;
		PreparedStatement pstmt=null;
		String sql=null;
		try {
			conn=pool.getConnection();
			
			
			
			
			
			
			flag=true;
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			pool.freeConnection(conn, pstmt);
		}
		return flag;
	}
	
	
}



(-)DBConnectionMgr.java에서

import java.util.Properties;
import java.util.Vector;
-----

    /** Returns an unused existing or new connection.  */
    public synchronized Connection getConnection()
            throws Exception {
        if (!initialized) {
            Class c = Class.forName(_driver);
            DriverManager.registerDriver((Driver) c.newInstance());

            initialized = true;
        }
        Connection c = null;
        ConnectionObject co = null;
        boolean badConnection = false;
        for (int i = 0; i < connections.size(); i++) {
            co = (ConnectionObject) connections.elementAt(i);

            // If connection is not in use, test to ensure it's still valid!
            if (!co.inUse) {
                try {
                    badConnection = co.connection.isClosed();
                    if (!badConnection)
                        badConnection = (co.connection.getWarnings() != null);
                } catch (Exception e) {
                    badConnection = true;
                    e.printStackTrace();
                }

                // Connection is bad, remove from pool
                if (badConnection) {
                    connections.removeElementAt(i);
                    trace("ConnectionPoolManager: Remove disconnected DB connection #" + i);
                    continue;
                }

                c = co.connection;
                co.inUse = true;

                trace("ConnectionPoolManager: Using existing DB connection #" + (i + 1));
                break;
            }
        }

        if (c == null) {
            c = createConnection();
            co = new ConnectionObject(c, true);
            connections.addElement(co);

            trace("ConnectionPoolManager: Creating new DB connection #" + connections.size());
        }

        return c;
    }

}

....
 /** Marks a flag in the ConnectionObject to indicate this connection is no longer in use */
    public synchronized void freeConnection(Connection c) {
        if (c == null)
            return;

        ConnectionObject co = null;

        for (int i = 0; i < connections.size(); i++) {
            co = (ConnectionObject) connections.elementAt(i);
            if (c == co.connection) {
                co.inUse = false;
                break;
            }
        }

        for (int i = 0; i < connections.size(); i++) {
            co = (ConnectionObject) connections.elementAt(i);
            if ((i + 1) > _openConnections && !co.inUse)
                removeConnection(co.connection);
        }
    }

    public void freeConnection(Connection c, PreparedStatement p, ResultSet r) {
        try {
            if (r != null) r.close();
            if (p != null) p.close();
            freeConnection(c);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void freeConnection(Connection c, Statement s, ResultSet r) {
        try {
            if (r != null) r.close();
            if (s != null) s.close();
            freeConnection(c);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void freeConnection(Connection c, PreparedStatement p) {
        try {
            if (p != null) p.close();
            freeConnection(c);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void freeConnection(Connection c, Statement s) {
        try {
            if (s != null) s.close();
            freeConnection(c);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
....

 /** Marks a flag in the ConnectionObject to indicate this connection is no longer in use */
    public synchronized void freeConnection(Connection c) {
        if (c == null)
            return;

        ConnectionObject co = null;

        for (int i = 0; i < connections.size(); i++) {
            co = (ConnectionObject) connections.elementAt(i);
            if (c == co.connection) {
                co.inUse = false;
                break;
            }
        }

        for (int i = 0; i < connections.size(); i++) {
            co = (ConnectionObject) connections.elementAt(i);
            if ((i + 1) > _openConnections && !co.inUse)
                removeConnection(co.connection);
        }
    }

    public void freeConnection(Connection c, PreparedStatement p, ResultSet r) {
        try {
            if (r != null) r.close();
            if (p != null) p.close();
            freeConnection(c);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void freeConnection(Connection c, Statement s, ResultSet r) {
        try {
            if (r != null) r.close();
            if (s != null) s.close();
            freeConnection(c);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void freeConnection(Connection c, PreparedStatement p) {
        try {
            if (p != null) p.close();
            freeConnection(c);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void freeConnection(Connection c, Statement s) {
        try {
            if (s != null) s.close();
            freeConnection(c);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
----


(-)DB연결하러 가겠습니다.
initialized 를 많이 볼텐데요.
다시는 이런코드로 안 들어오게하는 거엠
ConnectionObject
    }
	//후자 위치 이동시킴 머리근처에;
	    private boolean _traceOn = false;
	
	쓰레드와 연결제한 줄수있는 코드 넣음
	
	
	
	
	
	
	
	
	//오늘까지 한거는 zipcode넣어야 전체 확인가능.
	
	DBConnectionMgr.java 에서
	//DB에는 ?가 저장되게 했습니다.
	//conntion 툴.. 지난번엔 ? 했고, 오늘은 50명 한정에 기존에 사용안하는 사람들 빼고 이용하게끔.
	//method 이름과 구조를 아는게 "중요. "사유 목아프셔도 일일이 말씀해주심.
	(-)다음 이하는 내용에서 뽑아서 인터넷에 찾기 (한자도 못 들음 소스를 프린트 적고, 
	위치를 찾아서 어디쓰였는지 확인하고 쓰이는 형태를 이해하기(외우기),
	남들이 짠 소스 많이 볼꺼임. 어케하면 빨리 파악할지 연습하기)
	getConnectionLIst ()
	get
	get
	freeConnection
	re






20190828
zipcode를 readonly 해서 아쉬움


member.jsp
//idcheck 가려고 이 파일 수정
   url = "idCheck.jsp?id=" + id;  // document.regFrm.id.value // frm.id.value
----
//오타
<td><input type= "email" name="email" size="30">



?.???
<% 
String id = request.getParameter("id");
%>
----

(+)idCheck.jsp에서
</head>
<body bgcolor="#FFFFCC">
<div align="center">
  <br/><b><%=id %></b>
  <%
  if(result){
	  out.println("는 이미 존재하는 ID입니다.<p/>");
  } else {
    out.println("는 사용 가능 합니다.<p/>");
  }
  %>
  <a href="#" onClick="self.close()">닫기</a> 



</div>

	//멈춘상태에서 
(+)	MemberMgr.java
	public boolean checkId(String id) {
		boolean flag=false;
		Connection conn=null;
		PreparedStatement pstmt=null;
		String sql=null;
		try {
			conn=pool.getConnection();
			sql="select id from tblmember where id=?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setString(1, id);
			
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			pool.freeConnection(conn, pstmt);
		}
		return flag;
	}
...
	//cnt=count
	ResultSet rs = pstmt.executeQuery();
	rs.next()
	//int cnt = pstmt.excuteUpdate();
	//int.. 말고
 
	//if..는 null이냐 아니냐 if(rs.next()) -> rs.next() 씀
	
	
	
	
	
	
(+)zipSearch.jsp
<%@page import="jsboard.ZipcodeBean"%>
<%@page import="java.util.Vector"%>
<jsp:useBean id="mMgr" class="jsboard.MemberMgr"/>
<%
request.setCharacterEncoding("UTF-8");
String search = request.getParameter("search");
String area3 = null;
Vector<ZipcodeBean> vlist = null;
if(search.equals("y")) {
		area3=request.getParameter("area3");
vlist = mMgr.zipcodeRead(area3);
}
//area3 가뭔지 뭐로게
//vector.는 기본문법이라 꼭 알아야함.
//"y"는 뒤에 	frm.action="zipSearch.jsp?search=y"; 로 나옴
<jsp:useBean id="mMgr" class="jsboard.MemberMgr"/>
%>
---
function loadSearch() {
	frm = document.zipForm;
	if(frm.area3.value == "") {
		alert("도로명을 입력하세요.");
		frm.area3.focus();
		return;
	} 
	frm.action="zipSearch.jsp?search=y";
	frm.submit();
}





(+)MemberMgr.java
	public boolean checkId(String id) {
		boolean flag=false;
		Connection conn=null;
		PreparedStatement pstmt=null;
		String sql=null;
		try {
			conn=pool.getConnection();
			sql="select id from tblmember where id=?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setString(1, id);
			flag = pstmt.executeQuery().next();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			pool.freeConnection(conn, pstmt);
		}
		return flag;
	}

	public Vector<ZipcodeBean> zipcodeRead(String area3) {
		Vector<ZipcodeBean> vlist = new Vector<ZipcodeBean>();
		Connection conn=null;
		PreparedStatement pstmt=null;
		ResultSet rs = null;
		String sql=null;
		try {
			conn=pool.getConnection();
			sql="select * from tblzipcode where AREA3 like ?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setString(1, "%"+area3+"%");
			rs = pstmt.executeQuery();
			while(rs.next()) {
				
				rs.getString(1);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			pool.freeConnection(conn, pstmt);
		}
		return flag;
	}



(-)???.???
addElement





(-)zipSearch.jsp
\공유폴더\여기올려주세요\20190828
오라클 한글  3byte -> 2byte



(-)오라클에서 zipcode.??? 
select * from nls_database_parameters where parameter='NLS_CHARACTERSET';
AL43UTF8 이게 3byte를 뜻함.
----


    if(search.equals("y")) {
    	  if(vlist.isEmpty()) {
    		  %>
    		 <tr><td align="center"><br/>검색된 결과가 없습니다.</td></tr> 
    		  <%
    	  } else {
    		  %>
    		  <tr><td align="center"><br/>※검색 후, 아래 우편번호를 클릭하면 자동으로 입력됩니다.</td></tr> 
    		  <%




-------
select * from nls_database_parameters;
function sendAdd(zipcode, adds) {
	opener.document.regFrm.zipcode.value = zipcode;
	opener.document.regFrm.address.value = adds;
	self.close();
}



----------



    <%
    for(int i=0;i<vlist.size(); i++){
    	ZipcodeBean bean = vlist.get(i);
    	String rZipcode = bean.getZipcode();
    	String rArea1 = bean.getArea1();
    }
    %>
    
    
    
  </table>  
  </form>
-----
//지금까지 한거에 
입력 안하고 검색하면 y가 실행 안되고
(-)다시 물어보기


---
주소찾기->
콘솔 에러: into를 못 찾는다는 (쓴거 또 쓴적(함수)
// MemberMgr.java의 sql 쿼리문 수정하기)
// ZipcodeBean.java 만들기 
MemberMgr
		try {
			conn=pool.getConnection();
			sql="select id from tblmember where id=?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setString(1, id);
			flag = pstmt.executeQuery().next();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			pool.freeConnection(conn, pstmt);
		}
		return flag;
	}

	public Vector<ZipcodeBean> zipcodeRead(String area3) {
		Vector<ZipcodeBean> vlist = new Vector<ZipcodeBean>();
		Connection conn=null;
		PreparedStatement pstmt=null;
		ResultSet rs = null;
		String sql=null;
		try {
			conn=pool.getConnection();
			sql="select * from tblzipcode where AREA3 like ?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setString(1, "%"+area3+"%");
			rs = pstmt.executeQuery();
			while(rs.next()) {
				ZipcodeBean bean=new ZipcodeBean();
				bean.setZipcode(rs.getString(1));
				bean.setArea1(rs.getString(2));
				bean.setArea2(rs.getString(3));
				bean.setArea3(rs.getString(4));
				vlist.addElement(bean);
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			pool.freeConnection(conn, pstmt);
		}
		return vlist;
	}
	
	public boolean insertMember(MemberBean bean) {
		boolean flag=false;
		Connection conn=null;
		PreparedStatement pstmt=null;
		String sql=null;
		try {
			conn=pool.getConnection();
			sql="insert into tblmember (id,pwd,name,gender,birthday,email,zipcode,address,hobby,job) "
					+ " values (?,?,?,?,?,?,?,?,?,?) ";
					
					
					
					
					
(-)ZipcodeBean.java 만들기 					
	private String zipcode;
	private String area1;
	private String area2;
	private String area3;
	
	
	
	
	
	
	
테이블에 존재하는 모든 칼럼들을 조회하기 위해서는	
	select * from [테이블명] ;
	
	
	
	버튼 함수 머리에 <script type="text/javascript" src="script.js"></script>
	즉 script.js
	내용없음->쌤내용(+)->어려움. 만든거야? 복붙이야?
	----
	idCheck.jsp
	<jsp:useBean id="mMgr" class="jsboard.MemberMgr"/>
<% 
String id = request.getParameter("id");
boolean result = mMgr.checkId(id);







회원가입버튼 작동됬는데 다음화면이 
(+)memberProc.jsp
%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<% request.setCharacterEncoding("UTF-8"); %>

<jsp:useBean id="mgr" class="jsboard.MemberMgr"/>
<jsp:useBean id="bean" class="jsboard.MemberBean"/>
<jsp:setProperty property="*" name="bean"/> 
<%
boolean result = mgr.insertMember(bean);
String msg="회원가입에 실패 하였습니다.";
String location="member.jsp";
if(result){
	msg="회원가입을 하였습니다.";
	location="login.jsp";
}
%>
<script>
alert("<%=msg%>");
location.href="<%=location%>"

</script>





(-)15:02

login.jsp
(+)loginProc.jsp
(+)MemberMgr
15:55 http://localhost:8181/20190827_JSCh14/loginProc.jsp 에러를 읽을줄 모름.
입력해서 로그인 누르는데 정보조회를 안하냐? 오류내용이랑 뭔상관?
Newfile.jsp
까지가 로그인이고
로그아웃설계
로그아웃 눌러서
(-)http://localhost:8181/20190827_JSCh14/logout.jsp  백지인데 login.jsp 떠야할듯? 
login.jsp가 그냥 로그인화면으로 안 뜬다고 member.jsp들어갔다고


(-)admin 관련 수정하러가기
(-)취미 0가지 고르면 가입 실패하냐?



(-)loginProc.jsp
-----
//받아오는건 login의 String id = (String)session.getAttribute("idKey");
->member.jsp 로 들어옵니다? 수정하러가기
//리턴타입이 모든지 되서 형을 맞춰줌 String 하고있었으니. 어케앎 String id
//

(-)logout.jsp

(-)member.jsp 요기서 로그인하거나 로그아웃 갈수있게끔

다하셨다는데
(다른기능으로 가는건가요)
login.jsp



15:30 시간순서
(+)login.jsp
request.setCharacterEncoding("UTF-8");
String id = (String)session.getAttribute("idKey");
%>
---
<div align="center"><br/><br/>
    <%
    if(id!=null){
   	%>
    	<b><%=id%></b>환영합니다.
    	<p>제한된 기능을 사용 할 수가 이습니다.</p>
    	<a href="logout.jsp">로그아웃</a>
   	<%
    } else {
    %>
    <form name="loginFrm" method="post" action="loginProc.jsp">
---
     </table>
    </form>
    <% } %> <!--이거 넣어야 닫힘-->
  </div>
  
  
  
  
  
  (+)loginProc.jsp
  <jsp:useBean id="mMgr" class="jsboard.MemberMgr"/>
<%
request.setCharacterEncoding("UTF-8");
String id= request.getParameter("id");
String pwd= request.getParameter("pwd");
String msg="로그인에 실패하였습니다.";
String location="login.jsp";

boolean result =  mMgr.loginMember(id, pwd);
if(result){
	session.setAttribute("idKey", id); // session.invalidate();
	msg="로그인에 성공하였습니다.";
}
%>
<script>
	 alert("<%=msg%>");
	 location.href="<%=location%>";
</script>






()MemberMgr
		} finally {
			pool.freeConnection(conn, pstmt, rs);
	-----
	마지막 줄에 삽입.
		public boolean loginMember(String id, String pwd) {
		boolean flag=false;
		Connection conn=null;
		PreparedStatement pstmt=null;
		ResultSet rs=null;
		String sql=null;
		try {
			conn=pool.getConnection();
			sql="select id from tblmember where id=? and pwd=?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setString(1, id);
			pstmt.setString(2, pwd);
			rs = pstmt.executeQuery();
			flag = rs.next();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			pool.freeConnection(conn, pstmt, rs);
		}
		return flag;
	}
	()login.jsp
 ()Newfile.jsp
 
 





()





(-)login.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%!
String admin="admin";
%>
<%
request.setCharacterEncoding("UTF-8");
String id = (String)session.getAttribute("idKey");
%>

<html>
<head>
<title>로그인</title>
<link href="style.css" rel="stylesheet" type="text/css">
<script type="text/javascript">
  function loginCheck() {
    if (document.loginFrm.id.value == "") {
      alert("아이디를 입력해 주세요.");
      document.loginFrm.id.focus();
      return;
    }
    if (document.loginFrm.pwd.value == "") {
      alert("비밀번호를 입력해 주세요.");
      document.loginFrm.pwd.focus();
      return;
    }
    document.loginFrm.submit();
  }
</script>
</head>
<body bgcolor="#ffffcc">
<div align="center"><br/><br/>
    <%
    if(id!=null){
   	%>
    	<b><%=id%></b>환영합니다.
    	<%
    	if(id.equals(admin){
    	%>
    	  <p><a href="memberList.jsp">회원목록 조회</a></p>
    	<%
    	} else {
    	%>
    	<p>제한된 기능을 사용 할 수가 이습니다.</p>
    	<% }%>
    	<a href="logout.jsp">로그아웃</a>
   	<%
    } else {
    %>
    <form name="loginFrm" method="post" action="loginProc.jsp">
      <table>
        <tr>
          <td align="center" colspan="2"><h4>로그인</h4></td>
        </tr>
        <tr>
          <td>아 이 디</td>
          <td><input name="id"></td>
        </tr>
        <tr>
          <td>비밀번호</td>
          <td><input type="password" name="pwd"></td>
        </tr>
        <tr>
          <td colspan="2">
            <div align="right">
              <input type="button" value="로그인" onclick="loginCheck()">&nbsp;
              <input type="button" value="회원가입" onClick="javascript:location.href='member.jsp'">
            </div>
          </td>
        </tr>
      </table>
    </form>
    <% } %>
  </div>
</body>
</html>





(-)memberList.jsp 새로 만듬 !수정중
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@page import="java.util.Vector"%>
<%@page import="jsboard.MemberBean"%>

<jsp:useBean id="mMgr" class="jsboard.MemberMgr"/> 
<%
Vector<MemberBean> vlist = Vector<MemberBean>();
vlist = mMgr.membersInfo();
%>
<html>
<head>
<meta charset="UTF-8">
<title>회원목록조회</title>
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
<table>
<tr>
<td>id</td>
<td>passwd</td>
<td>name</td>
<td>gender</td>
<td>birthday</td>
<td>email</td>
<td>zipcode</td>
<td>address</td>
<td>hobby</td>
<td>job</td>
</tr>
<%
for(int i=0; i<vlist.size; i++) {
	MemberBean bean = vlist.get(i);
	%>
		<tr>
		<td><%= bean.getId() %></td>
		<td><%= bean.getPwd() %></td>
		<td><%= bean.getName() %></td>
		<td>gender</td>
		<td>birthday</td>
		<td>email</td>
		<td>zipcode</td>
		<td>address</td>
		<td>hobby</td>
		<td>job</td>
		</tr>
	<%
}
%>


</table>
</body>
</html>







()
	
	public Vector<MemberBean> membersInfo() {
		Vector<MemberBean> vlist = new Vector<MemberBean>();
		Connection conn=null;
		PreparedStatement pstmt=null;
		ResultSet rs = null;
		String sql=null;
		String admin = "admin";
		try {
			conn=pool.getConnection();
			sql="select * from tblmember where id<>?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setString(1, admin);
			rs = pstmt.executeQuery();
			while(rs.next()) {
				MemberBean bean=new MemberBean();
				bean.setId(rs.getString(1));
				bean.setPwd(rs.getString(2));
				bean.setName(rs.getString(3));
				bean.setGender(rs.getString(4));
				bean.setBirthday(rs.getString(5));
				bean.setEmail(rs.getString(6));
				bean.setZipcode(rs.getString(7));
				bean.setAddress(rs.getString(8));
				//bean.setHobby(rs.getString(9));
				bean.setJob(rs.getString(10));
				vlist.addElement(bean);
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			pool.freeConnection(conn, pstmt, rs);
		}
		return vlist;
	}
	




































